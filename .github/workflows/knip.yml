name: Knip Unused Code Check

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  knip-check:
    name: Unused Code & Dependencies Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
          
      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-
          
      - name: Install dependencies
        run: bun install --frozen-lockfile
        
      - name: Run Knip unused code check
        run: bun run knip
        continue-on-error: true
        id: knip-check
        
      - name: Comment PR (on issues found)
        if: steps.knip-check.outcome == 'failure' && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '⚠️ **Knip Found Unused Code/Dependencies**\n\nKnip detected unused files, exports, or dependencies. Please review and clean up:\n\n```bash\n# Check what Knip found\nbun run knip\n\n# For production dependencies only\nbun run knip:production\n```\n\n**Actions to take:**\n- Remove unused files, exports, and imports\n- Remove unused dependencies from package.json\n- Update entry points if needed\n\nNote: Some warnings might be false positives for framework-specific patterns.'
            })
            
      - name: Set exit code based on knip result
        if: steps.knip-check.outcome == 'failure'
        run: exit 1
